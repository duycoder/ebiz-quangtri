@using Web.Areas.QuanLyCongViec.Models;
@model ImportCongViecViewModel
@{
    ViewBag.Title = "Import công việc";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .no-padding .dataTables_wrapper table, .no-padding > table {
        border: 1px solid #ddd !important;
    }
</style>

<div id="ribbon" style="background: #57889c">
    <div class="col-md-6 col-sm-6">
        <ol class="breadcrumb"></ol>
    </div>

    <div class="col-md-6 col-sm-6 nopadding">
        <a class="btn btn-default pull-right" href="@Url.Action("NavigateBackToList", new { @controllerName = Model.controllerName})">
            <i class="fa fa-reply"></i>&nbsp;Quay lại
        </a>
    </div>
</div>

<div id="content">
    <div class="well well-sm block">
        <div class="header">
            Biểu mẫu import
        </div>

        <div class="body">
            <span>Bạn vui lòng tải biểu mẫu tại đây để cập nhật</span>
            <a href="@Model.importTemplatePath">
                <i class="fa fa-download" aria-hidden="true"></i>&nbsp;Tải xuống
            </a>
        </div>
    </div>

    <div class="well well-sm-block">
        <div class="header">
            Import dữ liệu
        </div>
        @using (Ajax.BeginForm("UploadImportTasks", "QuanLyCongViec", new { @area = "QuanLyCongViec" }, new AjaxOptions()
        {
            HttpMethod = "POST",
            OnFailure = "failureImportTask",
            OnSuccess = "successImportTask"
        }, new { id = "form--upload-task", @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken();

            <div class="form-inline">
                <input type="hidden" />
                <div class="form-group">
                    <input type="file" name="fileImport" class="form-control required" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" />
                    <button type="button" class="btn btn-primary" id="btnSave">Nhập dữ liệu</button>
                    <div class="note-error">
                        <span class="error mes-note-error"></span>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="jarviswidget hide" id="block--valid-data">
        <header role="heading">
            <h2 class="group-tittle mt10">
                Dữ liệu đúng
            </h2>
        </header>

        <div class="widget-t-body no-padding">
            <div class="hntbl-cover">
                <table id="table--valid-data" class="hinet-table table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="width-30"><input class="checkBoxControl" type="checkbox" /></th>
                            <th>
                                Tên công việc
                            </th>
                            <th>
                                Độ ưu tiên
                            </th>
                            <th>
                                Mức độ quan trọng
                            </th>
                            <th>
                                Người giao việc
                            </th>
                            <th>
                                Ngày nhận việc
                            </th>
                            <th>
                                Hạn hoàn thành
                            </th>
                            <th>
                                Người xử lý
                            </th>
                            <th>
                                Người tham gia xử lý
                            </th>
                            <th>
                                Nhắc việc trước
                            </th>
                            <th>
                                Nội dung
                            </th>
                            <th>
                                Mục tiêu
                            </th>
                        </tr>
                    </thead>
                </table>

                <div class="center">
                    <a href="javascript:void(0)" id="btnImport" class="btn btn-info">Cập nhật</a>
                </div>
            </div>
        </div>
    </div>

    <div id="block--invalid-data" class="jarviswidget hide">
        <header role="heading">
            <h2 class="group-tittle mt10">
                Dữ liệu sai
            </h2>
        </header>

        <div class="widget-t-body no-padding">
            <div class="hntbl-cover">
                <table id="table--invalid-data" class="hinet-table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="width-30"><input class="checkBoxControl" type="checkbox" /></th>
                            <th>
                                Tên công việc
                            </th>
                            <th>
                                Độ ưu tiên
                            </th>
                            <th>
                                Mức độ quan trọng
                            </th>
                            <th>
                                Người giao việc
                            </th>
                            <th>
                                Ngày nhận việc
                            </th>
                            <th>
                                Hạn hoàn thành
                            </th>
                            <th>
                                Người xử lý
                            </th>
                            <th>
                                Người tham gia xử lý
                            </th>
                            <th>
                                Nhắc việc trước
                            </th>
                            <th>
                                Nội dung
                            </th>
                            <th>
                                Mục tiêu
                            </th>
                        </tr>
                    </thead>
                </table>

                <div class="center">
                    <a href="javascript:void(0)" id="btnExport" class="btn btn-primary">Tải dữ liệu lỗi</a>
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    var errorDataColumns = [
        {
            "sClass": "center",
            "mData": function (data, type, dataToSet) {
                return '<input class="global_checkbox" ' + ' type="checkbox" name="ids" value="' + data[1] + '" />';
            },
            "orderable": false
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[1]) + '">' + "<span class='data-label'>" + getValueDisplay(data[1]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[2]) + '">' + "<span class='data-label'>" + getValueDisplay(data[2]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[3]) + '">' + "<span class='data-label'>" + getValueDisplay(data[3]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[4]) + '">' + "<span class='data-label'>" + getValueDisplay(data[4]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[5]) + '">' + "<span class='data-label'>" + getValueDisplay(data[5]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[6]) + '">' + "<span class='data-label'>" + getValueDisplay(data[6]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[7]) + '">' + "<span class='data-label'>" + getValueDisplay(data[7]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[8]) + '">' + "<span class='data-label'>" + getValueDisplay(data[8]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[9]) + '">' + "<span class='data-label'>" + getValueDisplay(data[9]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[10]) + '">' + "<span class='data-label'>" + getValueDisplay(data[10]) + "</span>";
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data[11]) + '">' + "<span class='data-label'>" + getValueDisplay(data[11]) + "</span>";
                return str;
            },

        }
    ]
    var validDataColumns = [
        {
            "sClass": "center",
            "mData": function (data, type, dataToSet) {
                return '<input class="global_checkbox" ' + ' type="checkbox" name="ids" value="' + data.ID + '" />';
            },
            "orderable": false
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.TENCONGVIEC) + '">' + getValueDisplay(data.TENCONGVIEC);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.DOUU_TIEN) + '">' + getValueDisplay(data.TEN_DOUUTIEN);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.DOKHAN) + '">' + getValueDisplay(data.TEN_DOKHAN);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.NGUOIGIAOVIEC_ID) + '">' + getValueDisplay(data.TEN_NGUOIGIAOVIEC);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.NGAY_NHANVIEC_TEXT) + '">' + getValueDisplay(data.NGAY_NHANVIEC_TEXT);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.NGAYHOANTHANH_THEOMONGMUON_TEXT) + '">' + getValueDisplay(data.NGAYHOANTHANH_THEOMONGMUON_TEXT);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.NGUOIXULYCHINH_ID) + '">' + getValueDisplay(data.TEN_NGUOIXULYCHINH);
                return str;
            },

        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.IDS_THAMGIA_XULY) + '">' + getValueDisplay(data.NGUOI_THAMGIA_XULY);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.SONGAYNHACTRUOCHAN) + '">' + getValueDisplay(data.SONGAYNHACTRUOCHAN);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.NOIDUNGCONGVIEC) + '">' + getValueDisplay(data.NOIDUNGCONGVIEC);
                return str;
            },
        },
        {
            "mData": function (data, type, dataToSet) {
                var str = '<input class="data-column" type="hidden" value="' + getValueDisplay(data.MUCTIEU_CONGVIEC) + '">' + getValueDisplay(data.MUCTIEU_CONGVIEC);
                return str;
            },
        }
    ]

    $(document).ready(function () {
        loadScript("/js/plugin/datatables/jquery.dataTables.min.js", function () {
            loadScript("/js/plugin/datatables/dataTables.colVis.min.js", function () {
                loadScript("/js/plugin/datatables/dataTables.tableTools.min.js", function () {
                    loadScript("/js/plugin/datatables/dataTables.bootstrap.min.js", function () {
                        loadScript("/js/plugin/datatable-responsive/datatables.responsive.min.js", function () {
                            loadScript("/Scripts/Common.js", setup)
                        })
                    });
                });
            });
        });

        $('#btnSave').on('click', function () {
            $('#form--upload-task').submit();
        })

        $('#form--upload-task').on('submit', function (event) {
            event.preventDefault();
            var dataString;
            var action = $('#form--upload-task').attr('action');
            var enctype = $('#form--upload-task').attr('enctype');

            if (enctype == 'multipart/form-data') {
                dataString = new FormData($('#form--upload-task').get(0));
                $.ajax({
                    type: "POST",
                    url: action,
                    data: dataString,
                    dataType: "json",
                    contentType: false,
                    processData: false,
                    success: successImportTask,
                    error: failureImportTask
                })
            }
            else {
                return false;
            }
        })

        $('.checkBoxControl').on('change', function () {

            var checked = $(this).is(':checked');
            var table = $(this).parents('table').first();

            table.find('input:checkbox.global_checkbox').each(function () {
                $(this).prop('checked', checked);
            })
        })

        $('#btnImport').on('click', function () {
            var items = [];
            $('#table--valid-data input:checkbox.global_checkbox:checked').each(function () {
                var row = $(this).parents('tr').first();
                var obj = [];

                row.find("td input[type=hidden]").each(function () {
                    obj.push($(this).val())
                });
                items.push(obj);
            });

            if (items.length > 0) {
                $.ajax({
                    type: 'POST',
                    url: '/QuanLyCongViec/QuanLyCongViec/SaveImportTasks',
                    data: JSON.stringify(items),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (result) {
                        if (result.Status) {
                            NotiSuccess('Import dữ liệu thành công');
                            $('#block--valid-data').addClass('hide');
                        } else {
                            NotiError(result.Message);
                        }
                    }, error: failureAjax
                });
            }
        });

        $('#btnExport').on('click', function () {
            var items = [];
            $('#table--invalid-data tbody input:checkbox.global_checkbox:checked').each(function () {
                var row = $(this).parents('tr').first();
                var data = [];

                row.find('td span.data-label').each(function () {
                    data.push($(this).text())
                })

                items.push(data);
            });

            $.ajax({
                type: "POST",
                url: '/QuanLyCongViec/QuanLyCongViec/ExportErrorTasks',
                data: JSON.stringify(items),
                dataType: "json",
                contentType: "application/json",
                success: function (result) {
                    if (result.Status) {
                        $('#block--invalid-data').addClass('hide');
                        NotiSuccess("Export dữ liệu thành công");
                        var win = window.open(result.PathStore, '_blank');
                        if (win) {
                            //win.focus();
                        } else {
                            alert('Hãy cho phép website mở popup');
                        }
                    } else {
                        NotiError(result.Message);
                    }
                }, error: failureAjax
            });
        })
    })

    function setup() {
        showPagingData('table--valid-data', null, validDataColumns);
        showPagingData('table--invalid-data', null, errorDataColumns);
    }

    function showData(result) {
        $('#block--valid-data, #block--invalid-data').removeClass('hide');
        showPagingData('table--valid-data', result.ListData, validDataColumns);
        showPagingData('table--invalid-data', result.ListFalse, errorDataColumns);
    }

    function showPagingData(tableId, data, configColumns) {
        $('#' + tableId).DataTable({
            "data": data,
            "bDestroy": true,
            "lengthMenu": [[20, 50, 100, -1], [20, 50, 100, "Tất cả"]],
            "iDisplayLength": 20,
            "paging": true,
            "order": [[0, 'none'], [1, 'asc']],
            "fnDrawCallback": function (oSettings) {
                runAllCharts()
            },
            "aoColumns": configColumns
        });
    }

    function failureImportTask(result) {
        NotiError(result.Message);
    }

    function successImportTask(result) {
        if (result.Status) {
            showData(result);
        } else {
            NotiError(result.Message);
        }
    }

</script>