
@using Business.CommonModel.CONSTANT;
@using Web.Areas.QL_NGUOINHAN_VANBANArea.Models;
@model QLNguoiNhanVanBanEditViewModel

<div class="modal-dialog">
    @using (Ajax.BeginForm("SaveRecipients", "QL_NGUOINHAN_VANBAN", new { area = "QL_NGUOINHAN_VANBANArea" },
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "onEditRecipientSuccess",
            OnFailure = "failureAjax"
        }, new { id = "form--edit-recipients" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div class="center">
                    <h4 class="modal-title">
                        @(Model.Entity.ID > 0 ? "CẬP NHẬT NHÓM NGƯỜI NHẬN VĂN BẢN" : "THÊM MỚI NHÓM NGƯỜI NHẬN VĂN BẢN")
                    </h4>
                </div>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <input type="hidden" name="ID" value="@Model.Entity.ID" />

                    <div class="form-group">
                        <label class="control-label col-sm-4">
                            Phòng ban
                        </label>
                        <div class="col-sm-8">
                            <strong>
                                @Model.Department.NAME
                            </strong>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-sm-4" for="TEN_NHOM">
                            Tên nhóm&nbsp;<span class="text-danger">(*)</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control required" name="TEN_NHOM" id="TEN_NHOM" value="@Model.Entity.TEN_NHOM" />
                            <div class="note-error">
                                <span class="error mes-note-error"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-sm-4" for="NGUOINHAN_IDS">
                            Thành viên&nbsp;<span class="text-danger">(*)</span>
                        </label>
                        <div class="col-sm-8">
                            @Html.DropDownList("NGUOINHAN_IDS", Model.GroupUsers, new { @class = " txt-select2 requiredDropDownList", @style = "width:100%", @multiple = "multiple" })
                            <div class="note-error">
                                <span class="error mes-note-error"></span>
                            </div>
                        </div>
                    </div>

                    @if (Model.IsSystemAdmin == true)
                    {
                        <div class="form-group">
                            <label class="control-label col-sm-4" for="NGUOINHAN_IDS">
                                Nhóm mặc định
                            </label>
                            <div class="col-sm-8">
                                <input type="checkbox" name="IS_DEFAULT" value="1" @(Model.Entity.IS_DEFAULT == true ? "checked" : "") />
                                <div class="note-error">
                                    <span class="error mes-note-error"></span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="button--submit-form">
                    Lưu thông tin
                </button>
                <a class="btn btn-default" data-dismiss="modal">
                    Đóng
                </a>
            </div>
        </div>
    }
</div>
<script>
    $(function () {
        loadScript("/js/plugin/select2/select2.min.js", function () {
            $("#form--edit-recipients .txt-select2").select2();
        });

        $('#button--submit-form').on('click', function () {
            var isValid = checkForm('form--edit-recipients');
            if (isValid) {
                $('#modal--recipients-edit').modal('hide');
                $('#form--edit-recipients').submit();
            }
            return false;
        });

    })


    function onEditRecipientSuccess(result) {
        if (result.Status) {
            $('#table--recipients').hinetTable('reload');
            NotiSuccess(result.Message);
        } else {
            NotiError(result.Message);
        }
    }
</script>
